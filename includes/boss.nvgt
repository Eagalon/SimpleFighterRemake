boss@[]bosses(0);
class boss
{
bool fireable, moveable, moveable2, telleble, telleble2;
int bossesound, defsound, firesound, hurtsound, telsound, wepsound;
double bosslevel;
double bossxp;
int bosscard;
int bossehealth;
double bosshealth;
double bossmaxhealth;
int bossx;
int bossy;
int damage;
int bosstime;
int firetime;
int launchtime;
int teltime;
string bosstype;
string bosstype2;
string bosstype3;
timer bosstimer, firetimer, launchtimer;
boss(int bx,int by,double hp,double maxhp,int bc,int dm,int ft,int lt,int sp,int tlt,double blv,double bxp,string bt,string bs,string bs2,bool bf,bool bm,bool bm2,bool tb,bool tb2)
{
this.bossehealth=hp;
bossx=bx;
bossy=by;
bosshealth=hp;
bossmaxhealth=maxhp;
bosscard=bc;
damage=dm;
firetime=ft;
launchtime=lt;
bosstime=sp;
telltime=tlt;
bosslevel=blv;
bossxp=bxp;
bosstype=bt;
bosstype2=bs;
bosstype3=bs2;
fireable=bf;
moveable=bm;
moveable2=bm2;
telleble=tb;
telleble2=tb2;
string[] bosesfx=find_files("sounds/"+soundpack+"/npc/boss/"+bosstype+"/*loop*");
if(bosesfx.length()!=0) bossesound=bosspool.play_extended_2d("sounds/"+soundpack+"/npc/boss/"+bosstype+"/"+bosesfx[random(0,bosesfx.length()-1)],me.x,me.y,bossx,bossy,0,0,0,0,true,0,0,painvolume,painpitch,false);
}
}
void bossloop()
{
for(uint i=0; i<bosses.length(); i++)
{
if(bosses[i].launchtimer.elapsed>=bosses[i].launchtime)
{
string[] launchsfx=find_files("sounds/"+soundpack+"/npc/boss/"+bosses[i].bosstype+"/*launch*");
if(launchsfx.length()!=0 and facing=="left" or facing=="right") bosses[i].firesound=bosspool.play_extended_2d("sounds/"+soundpack+"/npc/boss/"+bosses[i].bosstype+"/"+launchsfx[random(0,launchsfx.length()-1)],me.x,me.y,bosses[i].bossx,bosses[i].bossy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosspool.update_sound_2d(bosses[i].firesound,bosses[i].bossx,bosses[i].bossy);
bosses[i].launchtimer.restart();
}
if(bosses[i].turtimer.elapsed>=bosses[i].turtime)
{
turpool.update_sound_2d(bosses[i].bossesound,bosses[i].turx,bosses[i].tury);
bosses[i].turtimer.restart();
if(bosses[i].turx<me.x and bosses[i].moveable==true and paused==0)
{
bosses[i].turx++;
}
if(bosses[i].turx>me.x and bosses[i].moveable==true and paused==0)
{
bosses[i].turx--;
}
if(bosses[i].tury<me.y and bosses[i].moveable2==true and paused==0)
{
bosses[i].tury++;
}
if(bosses[i].tury>me.y and bosses[i].moveable2==true and paused==0)
{
bosses[i].tury--;
}
}
if(me.x==bosses[i].turx and me.y==bosses[i].tury and bosses[i].firetimer.elapsed>=bosses[i].firetime and bosses[i].fireable==true and shieldon==1 and shieldstrength<=maxshieldstrength and paused==0)
{
string[] arqsfx=find_files("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*");
if(arqsfx.length()!=0 and shieldhitsound==1) shieldslot=p.play_stationary_extended("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/"+arqsfx[random(0,arqsfx.length()-1)],false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=bosses[i].damage*bosses[i].turlevel-shielddefence;
bosses[i].firetimer.restart();
}
else if(me.x==bosses[i].turx and me.y==bosses[i].tury and bosses[i].firetimer.elapsed>=bosses[i].firetime and bosses[i].fireable==true and shieldon==0 and paused==0)
{
string[] hitsfx=find_files("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/*hit*");
if(hitsfx.length()!=0) bosses[i].wepsound=turpool.play_stationary_extended("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/"+hitsfx[random(0,hitsfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
string[] hurtsfx=find_files("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*");
if(hurtsfx.length()!=0 and charhurtsound==1) painslot=p.play_stationary_extended("sounds/"+soundpack+"/characters/"+chartype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],false,0,0,painvolume,painpitch,false);
health-=bosses[i].damage*bosses[i].turlevel-defence;
hearttime-=2*bosses[i].damage*bosses[i].turlevel-defence;
bosses[i].firetimer.restart();
}
if(bosses[i].turhealth<=0)
{
if(bosses[i].turcard>=2 and paused==0)
{
string[] lifesfx=find_files("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/*life*");
if(lifesfx.length()!=0) turpool.play_2d("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/"+lifesfx[random(0,lifesfx.length()-1)],me.x,me.y,bosses[i].turx,bosses[i].tury,false);
bosses[i].turhealth=bosses[i].turehealth;
bosses[i].turcard-=1;
}
else if(bosses[i].turcard<=1 and paused==0)
{
turpool.destroy_sound(bosses[i].hurtsound);
turpool.destroy_sound(bosses[i].bossesound);
string[] defsfx=find_files("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/*death*");
if(defsfx.length()!=0) bosses[i].defsound=turpool.play_extended_2d("sounds/"+soundpack+"/npc/boss/bosss/"+bosses[i].turtype+"/"+defsfx[random(0,defsfx.length()-1)],me.x,me.y,bosses[i].turx,bosses[i].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
if(xpmod>=1) xp+=bosses[i].turxp*bosses[i].turlevel*xpmod;
kills+=1;
bosses.remove_at(i);
return;
}
}
}
}
void spawn_boss(int x,int y,double hp,double maxhp,int tc,int dm,int firetime,int launchtime,int turtime,double turlevel,double xp,string turtype,string turtype2,string turtype3,bool fireable,bool moveable,bool moveable2)
{
boss bs1(x,y,hp,maxhp,tc,dm,firetime,launchtime,turtime,turlevel,xp,turtype,turtype2,turtype3,fireable,moveable,moveable2);
bosses.insert_last(bs1);
}
void destroy_all_bosses()
{
for(uint i=0; i<bosses.length(); i++)
{
turpool.destroy_sound(bosses[i].bossesound);
}
bosses.resize(0);
}

