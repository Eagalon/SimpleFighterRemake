musicsource@[] musicsources(0);
class musicsource
{
double minx, maxx, miny, maxy;
int tracksound;
double volume;
double pitch;
string musictype;
musicsource(double mx,double mx2,double my,double my2,string mrt,double vol,double semitone)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
musictype=mrt;
volume=vol;
pitch=semitone;
string[] musfilesfx=find_files("data/sounds/"+soundpack+"/objects/musics/"+musictype+"/*music*");
if(musfilesfx.length()!=0) tracksound=muspool.play_extended_2d("data/sounds/"+soundpack+"/objects/musics/"+musictype+"/"+musfilesfx[random(0,musfilesfx.length()-1)],me.x,me.y,minx,miny,0,0,0,0,true,0,0,volume,pitch,false);
muspool.update_sound_2d(tracksound,minx,miny);
muspool.update_sound_range_2d(tracksound, 0,maxx-minx,0,maxy-miny);
}
}
void spawn_musicsource(double x1,double x2,double y1,double y2,string musictype,double musvol,double muspitch)
{
musicsource musicsource1(x1,x2,y1,y2,musictype,musvol,muspitch);
musicsources.insert_last(musicsource1);
}
void destroy_all_musicsources()
{
for(uint i=0; i<musicsources.length(); i++)
{
muspool.destroy_sound(musicsources[i].tracksound);
}
musicsources.resize(0);
}
