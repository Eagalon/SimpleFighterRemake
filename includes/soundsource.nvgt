soundsource@[] soundsources(0);
class soundsource
{
double minx, maxx, miny, maxy;
int sorcesound;
double volume;
double pitch;
string sourcetype;
soundsource(double mx,double mx2,double my,double my2,string srt,double vol,double semitone)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
sourcetype=srt;
volume=vol;
pitch=semitone;
string[] srcfilesfx=find_files("sounds/objects/sources/"+sourcetype+"/*loop*");
if(srcfilesfx.length()!=0) sorcesound=sourcepool.play_extended_2d("sounds/objects/sources/"+sourcetype+"/"+srcfilesfx[random(0,srcfilesfx.length()-1)],me.x,me.y,minx,miny,0,0,0,0,true,0,0,volume,pitch,false);
sourcepool.update_sound_2d(sorcesound,minx,miny);
sourcepool.update_sound_range_2d(sorcesound, 0,maxx-minx,0,maxy-miny);
}
}
void spawn_soundsource(double x1,double x2,double y1,double y2,string sourcetype,double soundvol,double soundpitch)
{
soundsource soundsource1(x1,x2,y1,y2,sourcetype,soundvol,soundpitch);
soundsources.insert_last(soundsource1);
}
void destroy_all_soundsources()
{
for(uint i=0; i<soundsources.length(); i++)
{
sourcepool.destroy_sound(soundsources[i].sorcesound);
}
soundsources.resize(0);
}
