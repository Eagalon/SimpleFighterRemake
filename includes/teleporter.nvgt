teleporter@[]teleporters(0);
class teleporter
{
bool moveable, moveable2, spotted, singleuse;
int telsound, wepsound;
int telx;
int tely;
int dtelx;
int dtely;
int telerange;
int telerange2;
int teltime;
string teltype;
timer teltimer;
teleporter(int tx,int ty,int dtx,int dty,int trange,int trange2,int sp,string tt,bool tm,bool tm2,bool ss)
{
telx=tx;
tely=ty;
dtelx=dtx;
dtely=dty;
telerange=trange;
telerange2=trange2;
teltime=sp;
teltype=tt;
moveable=tm;
moveable2=tm2;
singleuse=ss;
spotted=false;
string[] telsfx=find_sound("data/sounds/"+soundpack+"/objects/teleporters/"+teltype+"/*loop*");
if(telsfx.length()!=0) telsound=telpool.play_extended_2d("data/sounds/"+soundpack+"/objects/teleporters/"+teltype+"/"+telsfx[random(0,telsfx.length()-1)],me.x,me.y,telx,tely,0,0,0,0,true,0,0,painvolume,painpitch,false);
}
}
void telloop()
{
for(uint i=0; i<teleporters.length(); i++)
{
if(teleporters[i].teltimer.elapsed>=teleporters[i].teltime)
{
if(absolute(me.x-teleporters[i].telx)<=teleporters[i].telerange and absolute(me.y-teleporters[i].tely)<=teleporters[i].telerange2)
{
teleporters[i].spotted=true;
}
if(teleporters[i].spotted)
{
telpool.update_sound_2d(teleporters[i].telsound,teleporters[i].telx,teleporters[i].tely);
teleporters[i].teltimer.restart();
if(teleporters[i].telx<me.x and teleporters[i].moveable==true and paused==0)
{
teleporters[i].telx++;
}
if(teleporters[i].telx>me.x and teleporters[i].moveable==true and paused==0)
{
teleporters[i].telx--;
}
if(teleporters[i].tely<me.y and teleporters[i].moveable2==true and paused==0)
{
teleporters[i].tely++;
}
if(teleporters[i].tely>me.y and teleporters[i].moveable2==true and paused==0)
{
teleporters[i].tely--;
}
}
}
if(me.x==teleporters[i].telx and me.y==teleporters[i].tely and paused==0)
{
if(teleporters[i].singleuse==true) telpool.destroy_sound(teleporters[i].telsound);
string[] hitsfx=find_sound("data/sounds/"+soundpack+"/objects/teleporters/"+teleporters[i].teltype+"/*hit*");
if(hitsfx.length()!=0) teleporters[i].wepsound=telpool.play_stationary_extended("data/sounds/"+soundpack+"/objects/teleporters/"+teleporters[i].teltype+"/"+hitsfx[random(0,hitsfx.length()-1)],false,0,0,weaponvolume,weaponpitch,false);
me.x=teleporters[i].dtelx;
me.y=teleporters[i].dtely;
if(teleporters[i].singleuse==true) teleporters.remove_at(i);
return;
}
}
}
void spawn_teleporter(int x,int y,int dx,int dy,int telrange,int telrange2,int teltime,string teltype,bool moveable,bool moveable2,bool singleuse)
{
teleporter tp1(x,y,dx,dy,telrange,telrange2,teltime,teltype,moveable,moveable2,singleuse);
teleporters.insert_last(tp1);
}
void destroy_all_teleporters()
{
for(uint i=0; i<teleporters.length(); i++)
{
telpool.destroy_sound(teleporters[i].telsound);
}
teleporters.resize(0);
}
