safezone@[]safezones(0);
class safezone
{
double minx, maxx, miny, maxy;
safezone(double mx,double mx2,double my,double my2)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
}
}
void spawn_safezone(double x1,double x2,double y1,double y2)
{
safezone sz1(x1,x2,y1,y2);
safezones.insert_last(sz1);
}
void destroy_all_safezones()
{
safezones.resize(0);
}

zone@[]zones(0);
class zone
{
double minx, maxx, miny, maxy;
string text;
zone(double mx,double mx2,double my,double my2,string txt)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
text=txt;
}
}
string get_zone_at(double x,double y)
{
string zdata;
for(uint i=0; i<zones.length(); i++)
{
if(zones[i].minx<=x and zones[i].maxx>=x and zones[i].miny<=y and zones[i].maxy>=y)
{
zdata=zones[i].text;
}
}
if(zdata!="") return zdata;
else return "";
}
string gmz()
{
return get_zone_at(me.x,me.y);
}
void checkloc()
{
if (get_zone_at(me.x, me.y)!="")
{
string locate=get_zone_at(me.x, me.y);
if (locate!=newzone)
{
if (zonestatus==1)
speak(locate);
newzone=locate;
}
}
else
{
if (newzone!="")
{
if (zonestatus==1) speak("leving "+newzone);
newzone="";
}
}
}
void spawn_zone(double x1,double x2,double y1,double y2,string text)
{
zone zone1(x1,x2,y1,y2,text);
zones.insert_last(zone1);
}
void destroy_all_zones()
{
zones.resize(0);
}
