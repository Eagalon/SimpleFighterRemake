vanishing_platform@[]vanishing_platforms(0);
class vanishing_platform
{
bool vanished=false;
int vplatsound;
double minx, maxx, miny, maxy;
double tilevolume;
double tilepitch;
double vplatvolume;
double vplatpitch;
int vplattime;
string tile;
string vptype;
timer vplattimer;
vanishing_platform(double mx,double mx2,double my,double my2,string ty,double vol,double semitone,string vtype,double vol2,double semitone2,int vtime)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
tile=ty;
tilevolume=vol;
tilepitch=semitone;
vptype=vtype;
vplatvolume=vol2;
vplatpitch=semitone2;
vplattime=vtime;
}
}
void vplatloop()
{
for(uint i=0; i<vanishing_platforms.length(); i++)
{
if(vanishing_platforms[i].vanished==false and vanishing_platforms[i].vplattimer.elapsed>=vanishing_platforms[i].vplattime)
{
vanpool.destroy_sound(vanishing_platforms[i].vplatsound);
spawn_platform(vanishing_platforms[i].minx, vanishing_platforms[i].maxx, vanishing_platforms[i].miny, vanishing_platforms[i].maxy, "", vanishing_platforms[i].tilevolume, vanishing_platforms[i].tilepitch);
vanishing_platforms[i].vanished=true;
vanishing_platforms[i].vplattimer.restart();
}
else if(vanishing_platforms[i].vanished==true and vanishing_platforms[i].vplattimer.elapsed>=vanishing_platforms[i].vplattime)
{
spawn_platform(vanishing_platforms[i].minx, vanishing_platforms[i].maxx, vanishing_platforms[i].miny, vanishing_platforms[i].maxy, vanishing_platforms[i].tile, vanishing_platforms[i].tilevolume, vanishing_platforms[i].tilepitch);
string[] vplatsfx=find_files("sounds/"+soundpack+"/objects/vanishing platforms/"+vanishing_platforms[i].vptype+"/*loop*");
if(vplatsfx.length()!=0) vanishing_platforms[i].vplatsound=vanpool.play_extended_2d("sounds/"+soundpack+"/objects/vanishing platforms/"+vanishing_platforms[i].vptype+"/"+vplatsfx[random(0,vplatsfx.length()-1)],me.x,me.y,vanishing_platforms[i].minx,vanishing_platforms[i].miny,0,0,0,0,true,0,0,vanishing_platforms[i].vplatvolume,vanishing_platforms[i].vplatpitch,false);
vanpool.update_sound_2d(vanishing_platforms[i].vplatsound,vanishing_platforms[i].minx,vanishing_platforms[i].miny);
vanpool.update_sound_range_2d(vanishing_platforms[i].vplatsound, 0, vanishing_platforms[i].maxx-vanishing_platforms[i].minx, 0, vanishing_platforms[i].maxy-vanishing_platforms[i].miny);
vanishing_platforms[i].vanished=false;
vanishing_platforms[i].vplattimer.restart();
}
}
}
void spawn_vanishing_platform(double x1,double x2,double y1,double y2,string tile,double tilevol,double tilepitch,string vtype,double vplatvol,double vplatpitch,int vtime)
{
vanishing_platform vp1(x1,x2,y1,y2,tile,tilevol,tilepitch,vtype,vplatvol,vplatpitch,vtime);
vanishing_platforms.insert_last(vp1);
}
void destroy_all_vanishing_platforms()
{
for(uint i=0; i<vanishing_platforms.length(); i++)
{
vanpool.destroy_sound(vanishing_platforms[i].vplatsound);
}
vanishing_platforms.resize(0);
}
