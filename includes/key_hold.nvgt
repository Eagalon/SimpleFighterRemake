bool alt_is_up()
{
if(key_up(KEY_LMENU) or key_up(KEY_RMENU))
{
return true;
}
return false;
}
bool control_is_up()
{
if(key_up(KEY_LCONTROL) or key_up(KEY_RCONTROL))
{
return true;
}
return false;
}
bool shift_is_up()
{
if(key_up(KEY_LSHIFT) or key_up(KEY_RSHIFT))
{
return true;
}
return false;
}
bool alt_is_down()
{
if(key_down(KEY_LMENU) or key_down(KEY_RMENU))
{
return true;
}
return false;
}
bool control_is_down()
{
if(key_down(KEY_LCONTROL) or key_down(KEY_RCONTROL))
{
return true;
}
return false;
}
bool shift_is_down()
{
if(key_down(KEY_LSHIFT) or key_down(KEY_RSHIFT))
{
return true;
}
return false;
}

class kh
{
bool already_installed;
void install()
{
if (screen_reader_is_running(1) and !already_installed)
{
install_keyhook();
already_installed=true;
}
}
void uninstall()
{
if (screen_reader_is_running(1) and !already_installed)
{
uninstall_keyhook();
already_installed=false;
}
}
}

class key_hold
{
bool status;
uint key_flag=0;
int key_code;
int repeat_time;
int setting_1;
int setting_2;
timer key_timer;
key_hold(int _key_code, int _setting_1, int _setting_2)
{
key_code=_key_code;
setting_1=_setting_1;
setting_2=_setting_2;
repeat_time=setting_1;
}
bool pressing()
{
status=key_down(key_code);
if(status==false)
{
repeat_time=0;
key_timer.restart();
key_flag=0;
return false;
}
if(key_timer.elapsed>=repeat_time)
{
switch(key_flag)
{
case 0:
key_flag=1;
repeat_time=setting_1;
key_timer.restart();
break;
case 1:
repeat_time=setting_2;
key_timer.restart();
break;
}
return true;
}
return false;
}
}
