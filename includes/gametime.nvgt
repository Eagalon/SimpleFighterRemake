void pause_pools()
{
    sound_pool@[] pools = {animalpool, bombpool, enemiepool, liftpool, passagepool, platpool, projpool, robpool, telpool, turpool, zombpool, calpool, clockpool, checkpool, hazardpool, beltpool, doorpool, muspool, signpool, sourcepool, spikepool, vanpool, vehpool};    
    for(uint h = 0; h < pools.length(); h++)
    {
        for(uint i = 0; i < pools[h].items.length(); i++)
        {
            if(@pools[h].items[i].handle == null)
                continue;
            if(pools[h].items[i].handle.playing == false)
                continue;
            pools[h].pause_sound(i);
        }
    }
}
void resume_pools()
{
    sound_pool@[] pools = {animalpool, bombpool, enemiepool, liftpool, passagepool, platpool, projpool, robpool, telpool, turpool, zombpool, calpool, clockpool, checkpool, hazardpool, beltpool, doorpool, muspool, signpool, sourcepool, spikepool, vanpool, vehpool};   
    for(uint h = 0; h < pools.length(); h++)
    {
        for(uint i = 0; i < pools[h].items.length(); i++)
        {
            pools[h].resume_sound(i);
        }
    }
}
void pause_game()
{
paused=1;
pause_pools();
cammable=false;
droppable=false;
fireable=false;
gametimer.pause();
healable=false;
jumpable=false;
moveable=false;
quittable=false;
speedable=false;
spawnable=false;
sittable=false;
telable=false;
turnable=false;
}
void resume_game()
{
paused=0;
resume_pools();
cammable=true;
droppable=true;
fireable=true;
gametimer.resume();
healable=true;
jumpable=true;
moveable=true;
quittable=true;
speedable=true;
spawnable=true;
sittable=true;
telable=true;
turnable=true;
}
