forcefield@[]forcefields(0);
class forcefield
{
bool forcefielded;
int activesound,inactivesound,wepsound;
double minx,maxx,miny,maxy;
int activetime;
int deactivetime;
int damage;
string forcetype;
timer activetimer, deactivetimer;
forcefield(double mx,double mx2,double my,double my2,int dmg,int sp,string ftype)
{
minx=mx;
maxx=mx2;
miny=my;
maxy=my2;
damage=dmg;
activetime=sp;
deactivetime=sp;
forcetype=ftype;
string[] inactivesfx=find_sound("data/sounds/"+soundpack+"/objects/force fields/"+forcetype+"/*off*");
if(inactivesfx.length()!=0) inactivesound=forcepool.play_extended_2d("data/sounds/"+soundpack+"/objects/force fields/"+forcetype+"/"+inactivesfx[random(0,inactivesfx.length()-1)],me.x,me.y,minx,miny,0,0,0,0,true,0,0,painvolume,painpitch,false);
forcepool.update_sound_2d(inactivesound, minx, miny);
forcepool.update_sound_range_2d(inactivesound, 0, maxx-minx, 0, maxy-miny);
}
}
void forceloop()
{
for(uint i=0;i<forcefields.length();i++)
{
if(forcefields[i].forcefielded==false && forcefields[i].deactivetimer.elapsed>=forcefields[i].deactivetime)
{
forcefields[i].forcefielded=true;
forcepool.destroy_sound(forcefields[i].inactivesound);
string[] activesfx=find_sound("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/*on*");
if(activesfx.length()!=0) forcefields[i].activesound=forcepool.play_extended_2d("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/"+activesfx[random(0,activesfx.length()-1)],me.x,me.y,forcefields[i].minx,forcefields[i].miny,0,0,0,0,true,0,0,painvolume,painpitch,false);
forcepool.update_sound_2d(forcefields[i].activesound, forcefields[i].minx, forcefields[i].miny);
forcepool.update_sound_range_2d(forcefields[i].activesound, 0, forcefields[i].maxx-forcefields[i].minx, 0, forcefields[i].maxy-forcefields[i].miny);
forcefields[i].activetimer.restart();
}
else if(forcefields[i].forcefielded==true && forcefields[i].activetimer.elapsed>=forcefields[i].activetime)
{
forcefields[i].forcefielded=false;
forcepool.destroy_sound(forcefields[i].activesound);
string[] inactivesfx=find_sound("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/*off*");
if(inactivesfx.length()!=0) forcefields[i].inactivesound=forcepool.play_extended_2d("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/"+inactivesfx[random(0,inactivesfx.length()-1)],me.x,me.y,forcefields[i].minx,forcefields[i].miny,0,0,0,0,true,0,0,painvolume,painpitch,false);
forcepool.update_sound_2d(forcefields[i].inactivesound, forcefields[i].minx, forcefields[i].miny);
forcepool.update_sound_range_2d(forcefields[i].inactivesound, 0, forcefields[i].maxx-forcefields[i].minx, 0, forcefields[i].maxy-forcefields[i].miny);
forcefields[i].deactivetimer.restart();
}
if(forcefields[i].forcefielded==true && forcefields[i].minx<=me.x && forcefields[i].maxx>=me.x && forcefields[i].miny<=me.y && forcefields[i].maxy>=me.y && shieldon==1 && shieldstrength<=maxshieldstrength && paused==0)
{
string[] arqsfx=find_sound("data/sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*");
if(arqsfx.length()!=0 && shieldhitsound==1) shieldslot=p.play_stationary_extended("data/sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/"+arqsfx[random(0,arqsfx.length()-1)],false,0,0,shieldvolume,shieldpitch,false);
string[] hitsfx=find_sound("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/*hit*");
if(hitsfx.length()!=0) forcefields[i].wepsound=forcepool.play_stationary_extended("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/"+hitsfx[random(0,hitsfx.length()-1)],false,0,0,painvolume,painpitch,false);
shieldstrength-=forcefields[i].damage-shielddefence;
pbounce(5);
return;
}
else if(forcefields[i].forcefielded==true && forcefields[i].minx<=me.x && forcefields[i].maxx>=me.x && forcefields[i].miny<=me.y && forcefields[i].maxy>=me.y && shieldon==0 && paused==0)
{
string[] hitsfx=find_sound("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/*hit*");
if(hitsfx.length()!=0) forcefields[i].wepsound=forcepool.play_stationary_extended("data/sounds/"+soundpack+"/objects/force fields/"+forcefields[i].forcetype+"/"+hitsfx[random(0,hitsfx.length()-1)],false,0,0,painvolume,painpitch,false);
string[] hurtsfx=find_sound("data/sounds/"+soundpack+"/characters/"+chartype+"/*hurt*");
if(hurtsfx.length()!=0 && charhurtsound==1) painslot=p.play_stationary_extended("data/sounds/"+soundpack+"/characters/"+chartype+"/"+hurtsfx[random(0,hurtsfx.length()-1)],false,0,0,painvolume,painpitch,false);
health-=forcefields[i].damage-defence;
hearttime-=forcefields[i].damage-defence;
pbounce(5);
return;
}
}
}
void spawn_forcefield(double x1,double x2,double y1,double y2,int dmg,int sp,string forcetype)
{
forcefield force1(x1,x2,y1,y2,dmg,sp,forcetype);
forcefields.insert_last(force1);
}
void destroy_all_forcefields()
{
for(uint i=0;i<forcefields.length();i++)
{
forcepool.destroy_sound(forcefields[i].activesound);
forcepool.destroy_sound(forcefields[i].inactivesound);
}
forcefields.resize(0);
}
